{"version":3,"sources":["components/PersonComponent.js","utils/API.js","App.js","index.js"],"names":["PersonComopnent","props","alt","picture","className","src","style","margin","first","last","email","phone","axios","get","App","state","persons","search","handleInputChange","event","value","target","name","setState","console","log","handleFormSubmit","preventDefault","searchMovies","API","then","res","data","results","catch","err","onChange","this","type","placeholder","id","scope","filter","person","includes","input","map","PersonComponent","key","login","uuid","medium","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAgBeA,MAbf,SAA0BC,GACtB,OACF,4BAEI,4BAAI,yBAAKC,IAAKD,EAAME,QAASC,UAAU,YAAYC,IAAKJ,EAAME,QAASG,MAAO,CAAEC,OAAQ,aACxF,4BAAKN,EAAMO,OACX,4BAAKP,EAAMQ,MACX,4BAAKR,EAAMS,OACX,4BAAKT,EAAMU,S,iBCRF,EACL,WACN,OAAOC,IAAMC,IAJD,iDCiFDC,E,4MA5EbC,MAAQ,CACNC,QAAS,GACTC,OAAQ,I,EAcVC,kBAAoB,SAAAC,GAClB,IAAMC,EAAQD,EAAME,OAAOD,MACrBE,EAAOH,EAAME,OAAOC,KAC1B,EAAKC,SAAL,eACGD,EAAOF,IAEV,kBAAMI,QAAQC,IAAI,EAAKV,W,EAKzBW,iBAAmB,SAAAP,GACjBA,EAAMQ,iBACN,EAAKC,aAAa,EAAKb,MAAME,S,kEAvBV,IAAD,OAClBY,IACCC,MAAK,SAAAC,GACJP,QAAQC,IAAIM,GACZ,EAAKR,SAAS,CAAEP,QAASe,EAAIC,KAAKC,aAEnCC,OAAM,SAAAC,GAAG,OAAIX,QAAQC,IAAIU,Q,+BAoBlB,IAAD,OACT,OACA,6BAEE,2BACMC,SAAUC,KAAKnB,kBACfE,MAAOiB,KAAKpB,OAEZK,KAAK,SACLgB,KAAK,OACLlC,UAAU,eACVmC,YAAY,0BACZC,GAAG,WAET,2BAAOpC,UAAU,SAEhB,+BACC,4BACE,wBAAIqC,MAAM,QACV,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,kBAGL,+BACIJ,KAAKtB,MAAMC,QAAQ0B,QAAO,SAAAC,GAAM,MAA0B,KAAtB,EAAK5B,MAAME,QAAgB0B,EAAOC,SAAS,EAAK7B,MAAM8B,UAAQC,KAAI,SAAAH,GAAM,OAC9G,kBAACI,EAAD,CACAC,IAAOL,EAAOM,MAAMC,KACpB/C,QAAWwC,EAAOxC,QAAQgD,OAC1B3C,MAASmC,EAAOrB,KAAKd,MACrBC,KAAQkC,EAAOrB,KAAKb,KACpBC,MAAQiC,EAAOjC,MACfC,MAASgC,EAAOhC,kB,GAlEHyC,aCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a6ea07a5.chunk.js","sourcesContent":["import React from \"react\";\n\n// props is literally just getting data from a parent to child\nfunction PersonComopnent (props){\n    return(\n  <tr>\n     \n      <td><img alt={props.picture} className=\"img-fluid\" src={props.picture} style={{ margin: \"0 auto\" }} /></td>\n      <td>{props.first}</td>\n      <td>{props.last}</td>\n      <td>{props.email}</td>\n      <td>{props.phone}</td>\n    \n    </tr>\n)}\n\nexport default PersonComopnent;\n","import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=20&nat=us\"\n\nexport default {\n  search: function() {\n    return axios.get(BASEURL);\n  }\n};","import PersonComponent from \"./components/PersonComponent\"\nimport React, { Component } from \"react\";\nimport API from \"./utils/API\";\n\n// state is used when data is going to change, usually through user interaction - \nclass App extends Component {\n  state = {\n    persons: [],\n    search: \"\"\n  };\n\n \n  componentDidMount() {\n    API.search()\n    .then(res => { \n      console.log(res); \n      this.setState({ persons: res.data.results })\n    })\n    .catch(err => console.log(err));\n  }\n\n \n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    },\n    () => console.log(this.state)\n    );\n  };\n\n  // When the form is submitted, search the person directory API for the value of `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchMovies(this.state.search);\n  };\n\n  render() {\n  return (\n  <div>\n   {/* filter with map */}\n    <input\n          onChange={this.handleInputChange}\n          value={this.search}\n          // match state key to inut name\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search Person Directory\"\n          id=\"search\"\n        />\n    <table className=\"table\"> \n   {/* table header can be a component here without props b/c it's not getting data */}\n     <thead>\n      <tr>\n        <th scope=\"col\"></th> \n        <th scope=\"col\">First</th>\n        <th scope=\"col\">Last</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Phone Number</th>\n     </tr>\n    </thead>\n   <tbody> \n     { this.state.persons.filter(person => this.state.search === \"\" ||person.includes(this.state.input)).map(person => (\n     <PersonComponent \n     key = {person.login.uuid}\n     picture = {person.picture.medium}\n     first = {person.name.first}\n     last = {person.name.last}\n     email ={person.email}\n     phone = {person.phone}\n     />\n     )\n    )}\n   </tbody>\n  </table>    \n  </div>)\n      \n  }}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}